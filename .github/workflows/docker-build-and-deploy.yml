name: Test EKS Cluster Connection

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 136600023723
  ECR_REPOSITORY: my-eks-python-app
  HELM_RELEASE_NAME: my-eks-python-app

jobs:
  test-cluster-connection:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::136600023723:role/GitHubActionsEKSRole
        role-session-name: GitHubActionsSession
        aws-region: us-east-1

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.30.0

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.14.0

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region us-east-1 --name my-eks-python-cluster

    - name: Test kubectl get nodes
      run: |
        kubectl get nodes
  
    - name: Deploy Fluent Bit to EKS
      run: |
        helm repo add aws-observability https://aws.github.io/eks-charts
        helm repo update
        kubectl create namespace amazon-cloudwatch --dry-run=client -o yaml | kubectl apply -f -
        helm upgrade --install fluent-bit aws-observability/aws-for-fluent-bit \
          --namespace amazon-cloudwatch \
          -f helm/fluentbit-values.yaml

    - name: Build Docker image
      run: |
        docker build -t my-python-app:latest .

    - name: Push Docker image to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
        docker tag my-python-app:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

    - name: Deploy using Helm
      run: |
        helm upgrade --install $HELM_RELEASE_NAME ./helm --namespace default --create-namespace
